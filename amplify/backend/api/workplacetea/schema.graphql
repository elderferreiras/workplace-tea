type Workplace @model {
  id: ID!
  name: String!
  createdAt: AWSDateTime
  teas: [Tea] @connection(name: "WorkplaceTeas", sortField: "createdAt")
}
type Tea @model {
  id: ID!
  content: String!
  up: Int
  down: Int
  ip: String
  identifier: String
  createdAt: AWSDateTime
  workplace: Workplace @connection(name: "WorkplaceTeas")
  comments: [Comment] @connection(name: "TeaComments", sortField: "createdAt")
}
type Comment @model {
  id: ID!
  content: String
  author: String
  ip: String
  identifier: String
  createdAt: AWSDateTime
  tea: Tea @connection(name: "TeaComments")
}
type BlockedIPs @model @key(fields: ["ip"])  {
  id: ID!
  ip: String!
}
type FlaggedTea @model @key(fields: ["teaId"])  {
  id: ID!
  teaId: String!
}
type FlaggedComment @model @key(fields: ["commentId"])  {
  id: ID!
  comment: String
  commentId: String!
}
type AgreedToEULA @model @key(fields: ["identifier"])  {
  id: ID!
  identifier: String!
  ip: String
  agreed: Boolean
}
type BlockedUsers @model @key(fields: ["identifier"])  {
  id: ID!
  identifier: String!
  ip: String
  blockedIdentifier: String
  blockedIP: String
}
type BlockedContent @model @key(fields: ["identifier"])  {
  id: ID!
  identifier: String!
  commentId: String
  teaId: String
}
